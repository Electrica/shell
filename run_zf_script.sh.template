#!/bin/bash
#
# run_zf_script.sh.template
# sets appropriate environment variables so that scripts will run in the Zend environment;
# this file is meant as a template, to be renamed as run_zf_script.sh. Please see the section
# below marked as "CHANGE THESE VARIABLES:" for the environment variables that should be
# edited for the particular machine and config environment
# 
NOARGS=65
NOTFOUND=66

#
# *** START CHANGES HERE FOR EACH DIFFERENT MACHINE ***
# most importantly, create the environment variables needed to load the zend framework
LOGDIR=/var/log
PHP=`whereis php`

export APPLICATION_ENV=kristine_local
echo "setting APPLICATION_ENV to: " $APPLICATION_ENV
export ZEND_PATH=/Users/kristine/clean/ZendFramework/library
echo "setting ZEND_PATH to: " $ZEND_PATH 

# *** DONE CHANGES FOR EACH DIFFERENT MACHINE ***

echo
echo "run_zf_script.sh start..."

#
# make sure output log directory is available
#
if [ ! -d $LOGDIR ]; then 
    mkdir $LOGDIR 
fi
if [ ! -d $LOGDIR/tools ]; then 
    mkdir $LOGDIR/tools
fi

#
# get php script to execute
#
php_script_file=$1
if [ ! "$1" ]; then
    echo No PHP script file to execute has been specified. Exiting.
    exit $NOARGS
fi

echo PHP script file to execute: $php_script_file
if [ ! -e $php_script_file ]; then
    echo Script file: $php_script_file does not exist. Exiting.
    exit $NOTFOUND
fi 

arg1=$2
arg2=$3
arg3=$4
echo Input args to script: $arg1 $arg2 $arg3

#
# create the log subdir based on the script being run
#
script_basename=${php_script_file%.*}
if [ ! -d $LOGDIR/tools/$script_basename ]; then
    mkdir $LOGDIR/tools/$script_basename
fi

#
# create corresponding output file name
#
output_log_file="$LOGDIR/tools/${script_basename}/${script_basename}_"`eval date +%Y%m%d_%H%M%S`".log"
echo Output log file: $output_log_file 

#
# now actually run the script; stdout and stderr to output log
#
echo 
$PHP "$php_script_file" "$arg1" "$arg2" "$arg3" &> "$output_log_file"
echo
cat "$output_log_file"

echo
echo "run_zf_script.sh exit."
exit 0
